// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2015.4
// Copyright (C) 2015 Xilinx Inc. All rights reserved.
// 
// ===========================================================

#ifndef _backsub_HH_
#define _backsub_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "backsub_fadd_32ns_32ns_32_5_full_dsp.h"
#include "backsub_fmul_32ns_32ns_32_4_max_dsp.h"
#include "backsub_sitofp_32ns_32_6.h"
#include "backsub_frame1.h"
#include "backsub_frame2.h"
#include "backsub_AXILiteS_s_axi.h"
#include "backsub_CRTL_BUS_s_axi.h"
#include "backsub_gmem_m_axi.h"

namespace ap_rtl {

template<unsigned int C_M_AXI_GMEM_ADDR_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_ID_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_AWUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_DATA_WIDTH = 32,
         unsigned int C_M_AXI_GMEM_WUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_ARUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_RUSER_WIDTH = 1,
         unsigned int C_M_AXI_GMEM_BUSER_WIDTH = 1,
         unsigned int C_S_AXI_AXILITES_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_AXILITES_DATA_WIDTH = 32,
         unsigned int C_S_AXI_CRTL_BUS_ADDR_WIDTH = 6,
         unsigned int C_S_AXI_CRTL_BUS_DATA_WIDTH = 32>
struct backsub : public sc_module {
    // Port declarations 82
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_out< sc_logic > m_axi_gmem_AWVALID;
    sc_in< sc_logic > m_axi_gmem_AWREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_AWADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_AWID;
    sc_out< sc_lv<8> > m_axi_gmem_AWLEN;
    sc_out< sc_lv<3> > m_axi_gmem_AWSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_AWBURST;
    sc_out< sc_lv<2> > m_axi_gmem_AWLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_AWCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_AWPROT;
    sc_out< sc_lv<4> > m_axi_gmem_AWQOS;
    sc_out< sc_lv<4> > m_axi_gmem_AWREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_AWUSER_WIDTH> > m_axi_gmem_AWUSER;
    sc_out< sc_logic > m_axi_gmem_WVALID;
    sc_in< sc_logic > m_axi_gmem_WREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_WDATA;
    sc_out< sc_uint<C_M_AXI_GMEM_DATA_WIDTH/8> > m_axi_gmem_WSTRB;
    sc_out< sc_logic > m_axi_gmem_WLAST;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_WID;
    sc_out< sc_uint<C_M_AXI_GMEM_WUSER_WIDTH> > m_axi_gmem_WUSER;
    sc_out< sc_logic > m_axi_gmem_ARVALID;
    sc_in< sc_logic > m_axi_gmem_ARREADY;
    sc_out< sc_uint<C_M_AXI_GMEM_ADDR_WIDTH> > m_axi_gmem_ARADDR;
    sc_out< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_ARID;
    sc_out< sc_lv<8> > m_axi_gmem_ARLEN;
    sc_out< sc_lv<3> > m_axi_gmem_ARSIZE;
    sc_out< sc_lv<2> > m_axi_gmem_ARBURST;
    sc_out< sc_lv<2> > m_axi_gmem_ARLOCK;
    sc_out< sc_lv<4> > m_axi_gmem_ARCACHE;
    sc_out< sc_lv<3> > m_axi_gmem_ARPROT;
    sc_out< sc_lv<4> > m_axi_gmem_ARQOS;
    sc_out< sc_lv<4> > m_axi_gmem_ARREGION;
    sc_out< sc_uint<C_M_AXI_GMEM_ARUSER_WIDTH> > m_axi_gmem_ARUSER;
    sc_in< sc_logic > m_axi_gmem_RVALID;
    sc_out< sc_logic > m_axi_gmem_RREADY;
    sc_in< sc_uint<C_M_AXI_GMEM_DATA_WIDTH> > m_axi_gmem_RDATA;
    sc_in< sc_logic > m_axi_gmem_RLAST;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_RID;
    sc_in< sc_uint<C_M_AXI_GMEM_RUSER_WIDTH> > m_axi_gmem_RUSER;
    sc_in< sc_lv<2> > m_axi_gmem_RRESP;
    sc_in< sc_logic > m_axi_gmem_BVALID;
    sc_out< sc_logic > m_axi_gmem_BREADY;
    sc_in< sc_lv<2> > m_axi_gmem_BRESP;
    sc_in< sc_uint<C_M_AXI_GMEM_ID_WIDTH> > m_axi_gmem_BID;
    sc_in< sc_uint<C_M_AXI_GMEM_BUSER_WIDTH> > m_axi_gmem_BUSER;
    sc_in< sc_logic > s_axi_AXILiteS_AWVALID;
    sc_out< sc_logic > s_axi_AXILiteS_AWREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_AWADDR;
    sc_in< sc_logic > s_axi_AXILiteS_WVALID;
    sc_out< sc_logic > s_axi_AXILiteS_WREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_WDATA;
    sc_in< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH/8> > s_axi_AXILiteS_WSTRB;
    sc_in< sc_logic > s_axi_AXILiteS_ARVALID;
    sc_out< sc_logic > s_axi_AXILiteS_ARREADY;
    sc_in< sc_uint<C_S_AXI_AXILITES_ADDR_WIDTH> > s_axi_AXILiteS_ARADDR;
    sc_out< sc_logic > s_axi_AXILiteS_RVALID;
    sc_in< sc_logic > s_axi_AXILiteS_RREADY;
    sc_out< sc_uint<C_S_AXI_AXILITES_DATA_WIDTH> > s_axi_AXILiteS_RDATA;
    sc_out< sc_lv<2> > s_axi_AXILiteS_RRESP;
    sc_out< sc_logic > s_axi_AXILiteS_BVALID;
    sc_in< sc_logic > s_axi_AXILiteS_BREADY;
    sc_out< sc_lv<2> > s_axi_AXILiteS_BRESP;
    sc_in< sc_logic > s_axi_CRTL_BUS_AWVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_AWREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_AWADDR;
    sc_in< sc_logic > s_axi_CRTL_BUS_WVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_WREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_WDATA;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH/8> > s_axi_CRTL_BUS_WSTRB;
    sc_in< sc_logic > s_axi_CRTL_BUS_ARVALID;
    sc_out< sc_logic > s_axi_CRTL_BUS_ARREADY;
    sc_in< sc_uint<C_S_AXI_CRTL_BUS_ADDR_WIDTH> > s_axi_CRTL_BUS_ARADDR;
    sc_out< sc_logic > s_axi_CRTL_BUS_RVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_RREADY;
    sc_out< sc_uint<C_S_AXI_CRTL_BUS_DATA_WIDTH> > s_axi_CRTL_BUS_RDATA;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_RRESP;
    sc_out< sc_logic > s_axi_CRTL_BUS_BVALID;
    sc_in< sc_logic > s_axi_CRTL_BUS_BREADY;
    sc_out< sc_lv<2> > s_axi_CRTL_BUS_BRESP;
    sc_out< sc_logic > interrupt;


    // Module declarations
    backsub(sc_module_name name);
    SC_HAS_PROCESS(backsub);

    ~backsub();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    backsub_AXILiteS_s_axi<C_S_AXI_AXILITES_ADDR_WIDTH,C_S_AXI_AXILITES_DATA_WIDTH>* backsub_AXILiteS_s_axi_U;
    backsub_CRTL_BUS_s_axi<C_S_AXI_CRTL_BUS_ADDR_WIDTH,C_S_AXI_CRTL_BUS_DATA_WIDTH>* backsub_CRTL_BUS_s_axi_U;
    backsub_gmem_m_axi<8,32,5,C_M_AXI_GMEM_ID_WIDTH,C_M_AXI_GMEM_ADDR_WIDTH,C_M_AXI_GMEM_DATA_WIDTH,C_M_AXI_GMEM_AWUSER_WIDTH,C_M_AXI_GMEM_ARUSER_WIDTH,C_M_AXI_GMEM_WUSER_WIDTH,C_M_AXI_GMEM_RUSER_WIDTH,C_M_AXI_GMEM_BUSER_WIDTH,C_M_AXI_GMEM_USER_VALUE,C_M_AXI_GMEM_PROT_VALUE,C_M_AXI_GMEM_CACHE_VALUE>* backsub_gmem_m_axi_U;
    backsub_frame1* frame1_U;
    backsub_frame2* frame2_U;
    backsub_frame2* frame3_U;
    backsub_frame1* out_U;
    backsub_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* backsub_fadd_32ns_32ns_32_5_full_dsp_U1;
    backsub_fadd_32ns_32ns_32_5_full_dsp<1,5,32,32,32>* backsub_fadd_32ns_32ns_32_5_full_dsp_U2;
    backsub_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* backsub_fmul_32ns_32ns_32_4_max_dsp_U3;
    backsub_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* backsub_fmul_32ns_32ns_32_4_max_dsp_U4;
    backsub_fmul_32ns_32ns_32_4_max_dsp<1,4,32,32,32>* backsub_fmul_32ns_32ns_32_4_max_dsp_U5;
    backsub_sitofp_32ns_32_6<1,6,32,32>* backsub_sitofp_32ns_32_6_U6;
    backsub_sitofp_32ns_32_6<1,6,32,32>* backsub_sitofp_32ns_32_6_U7;
    backsub_sitofp_32ns_32_6<1,6,32,32>* backsub_sitofp_32ns_32_6_U8;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > ap_start;
    sc_signal< sc_logic > ap_done;
    sc_signal< sc_logic > ap_idle;
    sc_signal< sc_lv<19> > ap_CS_fsm;
    sc_signal< sc_logic > ap_sig_cseq_ST_st1_fsm_0;
    sc_signal< bool > ap_sig_bdd_37;
    sc_signal< sc_logic > ap_ready;
    sc_signal< sc_lv<32> > frame_in;
    sc_signal< sc_lv<32> > frame_out;
    sc_signal< sc_logic > init;
    sc_signal< sc_lv<32> > ap_return;
    sc_signal< sc_logic > backsub_AXILiteS_s_axi_U_ap_dummy_ce;
    sc_signal< sc_logic > backsub_CRTL_BUS_s_axi_U_ap_dummy_ce;
    sc_signal< sc_logic > gmem_AWVALID;
    sc_signal< sc_logic > gmem_AWREADY;
    sc_signal< sc_lv<32> > gmem_AWADDR;
    sc_signal< sc_lv<1> > gmem_AWID;
    sc_signal< sc_lv<32> > gmem_AWLEN;
    sc_signal< sc_lv<3> > gmem_AWSIZE;
    sc_signal< sc_lv<2> > gmem_AWBURST;
    sc_signal< sc_lv<2> > gmem_AWLOCK;
    sc_signal< sc_lv<4> > gmem_AWCACHE;
    sc_signal< sc_lv<3> > gmem_AWPROT;
    sc_signal< sc_lv<4> > gmem_AWQOS;
    sc_signal< sc_lv<4> > gmem_AWREGION;
    sc_signal< sc_lv<1> > gmem_AWUSER;
    sc_signal< sc_logic > gmem_WVALID;
    sc_signal< sc_logic > gmem_WREADY;
    sc_signal< sc_lv<8> > gmem_WDATA;
    sc_signal< sc_lv<1> > gmem_WSTRB;
    sc_signal< sc_logic > gmem_WLAST;
    sc_signal< sc_lv<1> > gmem_WID;
    sc_signal< sc_lv<1> > gmem_WUSER;
    sc_signal< sc_logic > gmem_ARVALID;
    sc_signal< sc_logic > gmem_ARREADY;
    sc_signal< sc_lv<32> > gmem_ARADDR;
    sc_signal< sc_lv<1> > gmem_ARID;
    sc_signal< sc_lv<32> > gmem_ARLEN;
    sc_signal< sc_lv<3> > gmem_ARSIZE;
    sc_signal< sc_lv<2> > gmem_ARBURST;
    sc_signal< sc_lv<2> > gmem_ARLOCK;
    sc_signal< sc_lv<4> > gmem_ARCACHE;
    sc_signal< sc_lv<3> > gmem_ARPROT;
    sc_signal< sc_lv<4> > gmem_ARQOS;
    sc_signal< sc_lv<4> > gmem_ARREGION;
    sc_signal< sc_lv<1> > gmem_ARUSER;
    sc_signal< sc_logic > gmem_RVALID;
    sc_signal< sc_logic > gmem_RREADY;
    sc_signal< sc_lv<8> > gmem_RDATA;
    sc_signal< sc_logic > gmem_RLAST;
    sc_signal< sc_lv<1> > gmem_RID;
    sc_signal< sc_lv<1> > gmem_RUSER;
    sc_signal< sc_lv<2> > gmem_RRESP;
    sc_signal< sc_logic > gmem_BVALID;
    sc_signal< sc_logic > gmem_BREADY;
    sc_signal< sc_lv<2> > gmem_BRESP;
    sc_signal< sc_lv<1> > gmem_BID;
    sc_signal< sc_lv<1> > gmem_BUSER;
    sc_signal< sc_logic > backsub_gmem_m_axi_U_ap_dummy_ce;
    sc_signal< sc_lv<17> > indvar_reg_296;
    sc_signal< sc_lv<17> > ap_reg_ppstg_indvar_reg_296_pp0_it1;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp0_stg0_fsm_8;
    sc_signal< bool > ap_sig_bdd_250;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it0;
    sc_signal< sc_lv<1> > exitcond8_reg_662;
    sc_signal< bool > ap_sig_bdd_259;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp0_it2;
    sc_signal< sc_lv<17> > i1_reg_308;
    sc_signal< sc_lv<17> > i_reg_319;
    sc_signal< sc_lv<17> > indvar1_reg_330;
    sc_signal< sc_lv<1> > init_read_read_fu_152_p2;
    sc_signal< sc_lv<1> > init_read_reg_638;
    sc_signal< sc_lv<32> > frame_out_read_reg_642;
    sc_signal< sc_lv<32> > frame_in_read_reg_647;
    sc_signal< sc_lv<64> > tmp_17_fu_386_p1;
    sc_signal< sc_lv<64> > tmp_17_reg_652;
    sc_signal< sc_logic > ap_sig_cseq_ST_st2_fsm_1;
    sc_signal< bool > ap_sig_bdd_289;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_ARREADY;
    sc_signal< sc_lv<32> > grp_fu_373_p2;
    sc_signal< sc_lv<1> > exitcond8_fu_390_p2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond8_reg_662_pp0_it1;
    sc_signal< sc_lv<17> > indvar_next_fu_396_p2;
    sc_signal< sc_lv<17> > indvar_next_reg_666;
    sc_signal< sc_lv<8> > gmem_addr_1_read_reg_671;
    sc_signal< sc_lv<1> > exitcond_fu_407_p2;
    sc_signal< sc_lv<1> > exitcond_reg_676;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp1_stg0_fsm_10;
    sc_signal< bool > ap_sig_bdd_314;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it1;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it2;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it3;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it4;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it5;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it6;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it7;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it8;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it9;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it10;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it11;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it12;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it13;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it14;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it15;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it16;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it17;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it18;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it19;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it20;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it21;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it22;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it23;
    sc_signal< sc_logic > ap_reg_ppiten_pp1_it24;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it2;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it3;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it4;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it5;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it6;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it7;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it8;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it9;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it10;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it11;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it12;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it13;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it14;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it15;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it16;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it17;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it18;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it19;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it20;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it21;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it22;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond_reg_676_pp1_it23;
    sc_signal< sc_lv<17> > i_2_fu_413_p2;
    sc_signal< sc_lv<64> > tmp_6_fu_419_p1;
    sc_signal< sc_lv<64> > tmp_6_reg_685;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it1;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it2;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it3;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it4;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it5;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it6;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it7;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it8;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it9;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it10;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it11;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it12;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it13;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it14;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it15;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it16;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it17;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it18;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it19;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it20;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it21;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it22;
    sc_signal< sc_lv<64> > ap_reg_ppstg_tmp_6_reg_685_pp1_it23;
    sc_signal< sc_lv<8> > frame1_q0;
    sc_signal< sc_lv<8> > val1_reg_703;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it2;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it3;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it4;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it5;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it6;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it7;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it8;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it9;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it10;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it11;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it12;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it13;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it14;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it15;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it16;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it17;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it18;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it19;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it20;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it21;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val1_reg_703_pp1_it22;
    sc_signal< sc_lv<8> > frame2_q0;
    sc_signal< sc_lv<8> > val2_reg_710;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val2_reg_710_pp1_it2;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val2_reg_710_pp1_it3;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val2_reg_710_pp1_it4;
    sc_signal< sc_lv<8> > ap_reg_ppstg_val2_reg_710_pp1_it5;
    sc_signal< sc_lv<8> > frame3_q0;
    sc_signal< sc_lv<8> > val3_reg_731;
    sc_signal< sc_lv<32> > grp_fu_364_p1;
    sc_signal< sc_lv<32> > tmp_8_reg_736;
    sc_signal< sc_lv<32> > grp_fu_367_p1;
    sc_signal< sc_lv<32> > tmp_11_reg_741;
    sc_signal< sc_lv<32> > grp_fu_349_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_751;
    sc_signal< sc_lv<32> > grp_fu_354_p2;
    sc_signal< sc_lv<32> > tmp_12_reg_756;
    sc_signal< sc_lv<32> > grp_fu_370_p1;
    sc_signal< sc_lv<32> > tmp_15_reg_761;
    sc_signal< sc_lv<32> > grp_fu_341_p2;
    sc_signal< sc_lv<32> > tmp_13_reg_766;
    sc_signal< sc_lv<32> > grp_fu_359_p2;
    sc_signal< sc_lv<32> > tmp_16_reg_771;
    sc_signal< sc_lv<8> > loc_V_reg_776;
    sc_signal< sc_lv<23> > loc_V_1_fu_451_p1;
    sc_signal< sc_lv<23> > loc_V_1_reg_782;
    sc_signal< sc_lv<8> > result_V_fu_546_p3;
    sc_signal< sc_lv<8> > result_V_reg_787;
    sc_signal< sc_lv<1> > not_tmp_s_fu_586_p2;
    sc_signal< sc_lv<1> > not_tmp_s_reg_792;
    sc_signal< sc_lv<1> > exitcond1_fu_600_p2;
    sc_signal< sc_lv<1> > exitcond1_reg_797;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp2_stg0_fsm_11;
    sc_signal< bool > ap_sig_bdd_556;
    sc_signal< sc_logic > ap_reg_ppiten_pp2_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp2_it1;
    sc_signal< sc_lv<17> > i_1_fu_606_p2;
    sc_signal< sc_lv<64> > tmp_4_fu_612_p1;
    sc_signal< sc_lv<64> > tmp_4_reg_806;
    sc_signal< sc_lv<64> > tmp_18_fu_617_p1;
    sc_signal< sc_lv<64> > tmp_18_reg_818;
    sc_signal< sc_logic > ap_sig_cseq_ST_st40_fsm_12;
    sc_signal< bool > ap_sig_bdd_578;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_AWREADY;
    sc_signal< sc_lv<1> > exitcond2_fu_621_p2;
    sc_signal< sc_lv<1> > exitcond2_reg_823;
    sc_signal< sc_logic > ap_sig_cseq_ST_pp3_stg0_fsm_13;
    sc_signal< bool > ap_sig_bdd_591;
    sc_signal< sc_logic > ap_reg_ppiten_pp3_it0;
    sc_signal< sc_logic > ap_reg_ppiten_pp3_it1;
    sc_signal< sc_lv<1> > ap_reg_ppstg_exitcond2_reg_823_pp3_it1;
    sc_signal< sc_logic > ap_sig_ioackin_gmem_WREADY;
    sc_signal< sc_logic > ap_reg_ppiten_pp3_it2;
    sc_signal< sc_lv<17> > indvar_next1_fu_627_p2;
    sc_signal< sc_lv<8> > out_q0;
    sc_signal< sc_lv<8> > out_load_reg_837;
    sc_signal< sc_lv<32> > grp_fu_380_p2;
    sc_signal< sc_logic > ap_sig_cseq_ST_st44_fsm_14;
    sc_signal< bool > ap_sig_bdd_629;
    sc_signal< sc_logic > ap_sig_cseq_ST_st8_fsm_7;
    sc_signal< bool > ap_sig_bdd_636;
    sc_signal< sc_logic > ap_sig_cseq_ST_st12_fsm_9;
    sc_signal< bool > ap_sig_bdd_648;
    sc_signal< sc_lv<17> > frame1_address0;
    sc_signal< sc_logic > frame1_ce0;
    sc_signal< sc_logic > frame1_we0;
    sc_signal< sc_lv<8> > frame1_d0;
    sc_signal< sc_lv<17> > frame2_address0;
    sc_signal< sc_logic > frame2_ce0;
    sc_signal< sc_logic > frame2_we0;
    sc_signal< sc_lv<8> > frame2_d0;
    sc_signal< sc_lv<17> > frame2_address1;
    sc_signal< sc_logic > frame2_ce1;
    sc_signal< sc_logic > frame2_we1;
    sc_signal< sc_lv<8> > frame2_d1;
    sc_signal< sc_lv<17> > frame3_address0;
    sc_signal< sc_logic > frame3_ce0;
    sc_signal< sc_logic > frame3_we0;
    sc_signal< sc_lv<8> > frame3_d0;
    sc_signal< sc_lv<17> > frame3_address1;
    sc_signal< sc_logic > frame3_ce1;
    sc_signal< sc_logic > frame3_we1;
    sc_signal< sc_lv<8> > frame3_d1;
    sc_signal< sc_lv<17> > out_address0;
    sc_signal< sc_logic > out_ce0;
    sc_signal< sc_logic > out_we0;
    sc_signal< sc_lv<8> > out_d0;
    sc_signal< sc_lv<17> > indvar_phi_fu_300_p4;
    sc_signal< sc_lv<64> > tmp_s_fu_402_p1;
    sc_signal< sc_lv<64> > tmp_21_fu_633_p1;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_ARREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_AWREADY;
    sc_signal< sc_logic > ap_reg_ioackin_gmem_WREADY;
    sc_signal< sc_logic > ap_sig_cseq_ST_st48_fsm_18;
    sc_signal< bool > ap_sig_bdd_767;
    sc_signal< sc_lv<8> > p_cast_fu_592_p3;
    sc_signal< sc_lv<32> > grp_fu_364_p0;
    sc_signal< sc_lv<32> > grp_fu_367_p0;
    sc_signal< sc_lv<32> > grp_fu_370_p0;
    sc_signal< sc_lv<32> > grp_fu_345_p2;
    sc_signal< sc_lv<32> > p_Val2_s_fu_437_p1;
    sc_signal< sc_lv<24> > p_Result_s_fu_455_p3;
    sc_signal< sc_lv<9> > tmp_i_i_i_cast2_fu_466_p1;
    sc_signal< sc_lv<9> > sh_assign_fu_469_p2;
    sc_signal< sc_lv<8> > tmp_4_i_i_fu_483_p2;
    sc_signal< sc_lv<1> > isNeg_fu_475_p3;
    sc_signal< sc_lv<9> > tmp_4_i_i_cast_fu_488_p1;
    sc_signal< sc_lv<9> > sh_assign_1_fu_492_p3;
    sc_signal< sc_lv<32> > sh_assign_1_cast_fu_500_p1;
    sc_signal< sc_lv<24> > sh_assign_1_cast_cast_fu_504_p1;
    sc_signal< sc_lv<54> > tmp_2_i_i_fu_462_p1;
    sc_signal< sc_lv<54> > tmp_6_i_i_fu_508_p1;
    sc_signal< sc_lv<24> > tmp_7_i_i_fu_512_p2;
    sc_signal< sc_lv<1> > tmp_25_fu_524_p3;
    sc_signal< sc_lv<54> > tmp_9_i_i_fu_518_p2;
    sc_signal< sc_lv<8> > tmp_20_fu_532_p1;
    sc_signal< sc_lv<8> > tmp_22_fu_536_p4;
    sc_signal< sc_lv<9> > tmp_7_cast_fu_554_p1;
    sc_signal< sc_lv<9> > tmp_18_cast_fu_557_p1;
    sc_signal< sc_lv<9> > tmp_19_fu_560_p2;
    sc_signal< sc_lv<1> > abscond_fu_572_p2;
    sc_signal< sc_lv<9> > neg_fu_566_p2;
    sc_signal< sc_lv<9> > abs_fu_578_p3;
    sc_signal< sc_logic > grp_fu_341_ce;
    sc_signal< sc_logic > grp_fu_345_ce;
    sc_signal< sc_logic > grp_fu_349_ce;
    sc_signal< sc_logic > grp_fu_354_ce;
    sc_signal< sc_logic > grp_fu_359_ce;
    sc_signal< sc_logic > grp_fu_364_ce;
    sc_signal< sc_logic > grp_fu_367_ce;
    sc_signal< sc_logic > grp_fu_370_ce;
    sc_signal< sc_lv<19> > ap_NS_fsm;
    sc_signal< bool > ap_sig_bdd_737;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<19> ap_ST_st1_fsm_0;
    static const sc_lv<19> ap_ST_st2_fsm_1;
    static const sc_lv<19> ap_ST_st3_fsm_2;
    static const sc_lv<19> ap_ST_st4_fsm_3;
    static const sc_lv<19> ap_ST_st5_fsm_4;
    static const sc_lv<19> ap_ST_st6_fsm_5;
    static const sc_lv<19> ap_ST_st7_fsm_6;
    static const sc_lv<19> ap_ST_st8_fsm_7;
    static const sc_lv<19> ap_ST_pp0_stg0_fsm_8;
    static const sc_lv<19> ap_ST_st12_fsm_9;
    static const sc_lv<19> ap_ST_pp1_stg0_fsm_10;
    static const sc_lv<19> ap_ST_pp2_stg0_fsm_11;
    static const sc_lv<19> ap_ST_st40_fsm_12;
    static const sc_lv<19> ap_ST_pp3_stg0_fsm_13;
    static const sc_lv<19> ap_ST_st44_fsm_14;
    static const sc_lv<19> ap_ST_st45_fsm_15;
    static const sc_lv<19> ap_ST_st46_fsm_16;
    static const sc_lv<19> ap_ST_st47_fsm_17;
    static const sc_lv<19> ap_ST_st48_fsm_18;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const bool ap_true;
    static const int C_S_AXI_DATA_WIDTH;
    static const int C_M_AXI_DATA_WIDTH;
    static const int C_M_AXI_GMEM_USER_VALUE;
    static const int C_M_AXI_GMEM_PROT_VALUE;
    static const int C_M_AXI_GMEM_CACHE_VALUE;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_B;
    static const sc_lv<32> ap_const_lv32_C;
    static const sc_lv<32> ap_const_lv32_D;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<17> ap_const_lv17_0;
    static const sc_lv<32> ap_const_lv32_19500;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_3F000000;
    static const sc_lv<32> ap_const_lv32_3E99999A;
    static const sc_lv<32> ap_const_lv32_3E4CCCCD;
    static const sc_lv<17> ap_const_lv17_19500;
    static const sc_lv<17> ap_const_lv17_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<9> ap_const_lv9_181;
    static const sc_lv<8> ap_const_lv8_7F;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<9> ap_const_lv9_E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<8> ap_const_lv8_0;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_abs_fu_578_p3();
    void thread_abscond_fu_572_p2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_ap_rst_n_inv();
    void thread_ap_sig_bdd_250();
    void thread_ap_sig_bdd_259();
    void thread_ap_sig_bdd_289();
    void thread_ap_sig_bdd_314();
    void thread_ap_sig_bdd_37();
    void thread_ap_sig_bdd_556();
    void thread_ap_sig_bdd_578();
    void thread_ap_sig_bdd_591();
    void thread_ap_sig_bdd_629();
    void thread_ap_sig_bdd_636();
    void thread_ap_sig_bdd_648();
    void thread_ap_sig_bdd_737();
    void thread_ap_sig_bdd_767();
    void thread_ap_sig_cseq_ST_pp0_stg0_fsm_8();
    void thread_ap_sig_cseq_ST_pp1_stg0_fsm_10();
    void thread_ap_sig_cseq_ST_pp2_stg0_fsm_11();
    void thread_ap_sig_cseq_ST_pp3_stg0_fsm_13();
    void thread_ap_sig_cseq_ST_st12_fsm_9();
    void thread_ap_sig_cseq_ST_st1_fsm_0();
    void thread_ap_sig_cseq_ST_st2_fsm_1();
    void thread_ap_sig_cseq_ST_st40_fsm_12();
    void thread_ap_sig_cseq_ST_st44_fsm_14();
    void thread_ap_sig_cseq_ST_st48_fsm_18();
    void thread_ap_sig_cseq_ST_st8_fsm_7();
    void thread_ap_sig_ioackin_gmem_ARREADY();
    void thread_ap_sig_ioackin_gmem_AWREADY();
    void thread_ap_sig_ioackin_gmem_WREADY();
    void thread_backsub_AXILiteS_s_axi_U_ap_dummy_ce();
    void thread_backsub_CRTL_BUS_s_axi_U_ap_dummy_ce();
    void thread_backsub_gmem_m_axi_U_ap_dummy_ce();
    void thread_exitcond1_fu_600_p2();
    void thread_exitcond2_fu_621_p2();
    void thread_exitcond8_fu_390_p2();
    void thread_exitcond_fu_407_p2();
    void thread_frame1_address0();
    void thread_frame1_ce0();
    void thread_frame1_d0();
    void thread_frame1_we0();
    void thread_frame2_address0();
    void thread_frame2_address1();
    void thread_frame2_ce0();
    void thread_frame2_ce1();
    void thread_frame2_d0();
    void thread_frame2_d1();
    void thread_frame2_we0();
    void thread_frame2_we1();
    void thread_frame3_address0();
    void thread_frame3_address1();
    void thread_frame3_ce0();
    void thread_frame3_ce1();
    void thread_frame3_d0();
    void thread_frame3_d1();
    void thread_frame3_we0();
    void thread_frame3_we1();
    void thread_gmem_ARADDR();
    void thread_gmem_ARBURST();
    void thread_gmem_ARCACHE();
    void thread_gmem_ARID();
    void thread_gmem_ARLEN();
    void thread_gmem_ARLOCK();
    void thread_gmem_ARPROT();
    void thread_gmem_ARQOS();
    void thread_gmem_ARREGION();
    void thread_gmem_ARSIZE();
    void thread_gmem_ARUSER();
    void thread_gmem_ARVALID();
    void thread_gmem_AWADDR();
    void thread_gmem_AWBURST();
    void thread_gmem_AWCACHE();
    void thread_gmem_AWID();
    void thread_gmem_AWLEN();
    void thread_gmem_AWLOCK();
    void thread_gmem_AWPROT();
    void thread_gmem_AWQOS();
    void thread_gmem_AWREGION();
    void thread_gmem_AWSIZE();
    void thread_gmem_AWUSER();
    void thread_gmem_AWVALID();
    void thread_gmem_BREADY();
    void thread_gmem_RREADY();
    void thread_gmem_WDATA();
    void thread_gmem_WID();
    void thread_gmem_WLAST();
    void thread_gmem_WSTRB();
    void thread_gmem_WUSER();
    void thread_gmem_WVALID();
    void thread_grp_fu_341_ce();
    void thread_grp_fu_345_ce();
    void thread_grp_fu_349_ce();
    void thread_grp_fu_354_ce();
    void thread_grp_fu_359_ce();
    void thread_grp_fu_364_ce();
    void thread_grp_fu_364_p0();
    void thread_grp_fu_367_ce();
    void thread_grp_fu_367_p0();
    void thread_grp_fu_370_ce();
    void thread_grp_fu_370_p0();
    void thread_grp_fu_373_p2();
    void thread_grp_fu_380_p2();
    void thread_i_1_fu_606_p2();
    void thread_i_2_fu_413_p2();
    void thread_indvar_next1_fu_627_p2();
    void thread_indvar_next_fu_396_p2();
    void thread_indvar_phi_fu_300_p4();
    void thread_init_read_read_fu_152_p2();
    void thread_isNeg_fu_475_p3();
    void thread_loc_V_1_fu_451_p1();
    void thread_neg_fu_566_p2();
    void thread_not_tmp_s_fu_586_p2();
    void thread_out_address0();
    void thread_out_ce0();
    void thread_out_d0();
    void thread_out_we0();
    void thread_p_Result_s_fu_455_p3();
    void thread_p_Val2_s_fu_437_p1();
    void thread_p_cast_fu_592_p3();
    void thread_result_V_fu_546_p3();
    void thread_sh_assign_1_cast_cast_fu_504_p1();
    void thread_sh_assign_1_cast_fu_500_p1();
    void thread_sh_assign_1_fu_492_p3();
    void thread_sh_assign_fu_469_p2();
    void thread_tmp_17_fu_386_p1();
    void thread_tmp_18_cast_fu_557_p1();
    void thread_tmp_18_fu_617_p1();
    void thread_tmp_19_fu_560_p2();
    void thread_tmp_20_fu_532_p1();
    void thread_tmp_21_fu_633_p1();
    void thread_tmp_22_fu_536_p4();
    void thread_tmp_25_fu_524_p3();
    void thread_tmp_2_i_i_fu_462_p1();
    void thread_tmp_4_fu_612_p1();
    void thread_tmp_4_i_i_cast_fu_488_p1();
    void thread_tmp_4_i_i_fu_483_p2();
    void thread_tmp_6_fu_419_p1();
    void thread_tmp_6_i_i_fu_508_p1();
    void thread_tmp_7_cast_fu_554_p1();
    void thread_tmp_7_i_i_fu_512_p2();
    void thread_tmp_9_i_i_fu_518_p2();
    void thread_tmp_i_i_i_cast2_fu_466_p1();
    void thread_tmp_s_fu_402_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
